#version 450

#define _NBL_GLSL_WORKGROUP_SIZE_ (1 << 8)

layout (local_size_x = _NBL_GLSL_WORKGROUP_SIZE_) in;

layout (set = 0, binding = 0, std430) buffer inout_buffer
{
	uint inout_values[];
};

layout(push_constant) uniform pushConstants
{
    layout (offset = 0) uint stride;
	layout (offset = 4) uint total_elements;
} u_push_constants;

#define STRIDED_IDX(i) (((i) + 1)*u_push_constants.stride-1)

#include <nbl/builtin/glsl/workgroup/arithmetic.glsl>

void main()
{
	if (gl_NumWorkGroups.x == 1)
	{
		uint idx = STRIDED_IDX(gl_GlobalInvocationID.x);

		uint data = 0u;
		if (idx < u_push_constants.total_elements)
			data = inout_values[idx];

		// Todo: just trying to be extra sure here, try to replace scan_result with data itself later
		uint scan_result = nbl_glsl_workgroupExclusiveAdd(data);

		if (idx < u_push_constants.total_elements)
			inout_values[idx] = scan_result;
	}
	else
	{
		uint idx = STRIDED_IDX(gl_GlobalInvocationID.x);
		uint data = inout_values[idx];

		// Todo: just trying to be extra sure here, try to replace scan_result with data itself later
		uint scan_result = nbl_glsl_workgroupInclusiveAdd(data);

		inout_values[idx] = scan_result;
	}
}