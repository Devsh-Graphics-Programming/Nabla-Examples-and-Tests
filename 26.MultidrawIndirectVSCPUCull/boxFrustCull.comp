#version 430 core
layout(local_size_x = 256) in;

#include "common.glsl"

#include "commonIndirect.glsl"
layout(set = 1, binding = 1, std430) restrict writeonly buffer IndirectDraws
{
    DrawElementsIndirectCommand_t draws[];
};

layout(set = 1, binding = 2, std430) restrict readonly buffer DrawInstanceCount
{
	uint drawInstanceCount[];
};

layout(push_constant) uniform PushConstants
{
    uint maxDrawCount;
};


void main()
{
    if (gl_GlobalInvocationID.x<maxDrawCount)
        return;

    mat4 modelViewProj = irr_builtin_glsl_workaround_AMD_broken_row_major_qualifier_mat4x4(modelData[draw.objectUUID].MVP);

    bool culled = false;

    draws[gl_GlobalInvocationID.x].instanceCount = culled ? drawInstanceCount[gl_GlobalInvocationID.x]:0u;
}
