#version 450

#define _NBL_GLSL_WORKGROUP_SIZE_ (1 << 10)

layout (local_size_x = _NBL_GLSL_WORKGROUP_SIZE_) in;

layout (set = 0, binding = 0, std430) readonly buffer in_buffer
{
	uvec2 in_values[];
};

layout (set = 0, binding = 1, std430) writeonly buffer out_buffer
{
	uvec2 out_values[];
};

layout (set = 0, binding = 2, std430) readonly buffer histogram_buffer
{
	uint histogram[];
};

#include <nbl/builtin/glsl/workgroup/arithmetic.glsl>

#define BITS_PER_PASS 4
#define NUM_BUCKETS (1 << BITS_PER_PASS)

shared uint local_histogram[NUM_BUCKETS]; // 64 bytes

// 
//	UNDER CONSTRUCTION!!!!
// 

void main()
{

	if (gl_LocalInvocationID.x < NUM_BUCKETS)
		local_histogram[gl_LocalInvocationID.x] = histogram[gl_LocalInvocationID.x * gl_NumWorkGroups.x + gl_WorkGroupID.x];

	barrier();
	memoryBarrier();

	uint sort_key = in_values[gl_GlobalInvocationID.x].x;
	uint sort_data = in_values[gl_GlobalInvocationID.x].y;
}